# Function to print the Tic-Tac-Toe board
def print_board(board):
    print("\n")
    for i in range(3):
        print(" | ".join(board[i]))
        if i < 2:
            print("---------")
    print("\n")
def check_winner(board, player):
    # Check rows, columns and diagonals
    for i in range(3):
        if all([board[i][j] == player for j in range(3)]) or all([board[j][i] == player for j in range(3)]):
            return True
    if board[0][0] == board[1][1] == board[2][2] == player or board[0][2] == board[1][1] == board[2][0] == player:
        return True
    return False
def is_board_full(board):
    for row in board:
        if " " in row:
            return False
    return True

# Function to handle the game logic
def play_game():
    # Initial empty board
    board = [[" " for _ in range(3)] for _ in range(3)]

    current_player = "X"

    # Main game loop
    while True:
        print_board(board)
        print(f"Player {current_player}'s turn.")

        # Get the input from the player
        while True:
            try:
                row, col = map(int, input(f"Enter row and column (0-2) for {current_player}: ").split())
                if board[row][col] == " ":
                    board[row][col] = current_player
                    break
                else:
                    print("Cell already occupied. Try again.")
            except (ValueError, IndexError):
                print("Invalid input. Please enter row and column as two numbers between 0 and 2.")

        # Check for a winner
        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break

        # Check for a draw
        if is_board_full(board):
            print_board(board)
            print("It's a draw!")
            break

        # Switch player
        current_player = "O" if current_player == "X" else "X"

if __name__ == "__main__":
    play_game()
